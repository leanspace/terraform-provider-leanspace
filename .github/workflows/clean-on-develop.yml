name: Clean Up Terraform From Tenant
on:
  workflow_dispatch:

jobs:
  terraform:
    permissions:
      id-token: write
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set env variables
        run: |
          echo "TF_VAR_tenant=buzz" | tee -a $GITHUB_ENV
          echo "TF_VAR_env=develop" | tee -a $GITHUB_ENV
          echo "TF_VAR_client_id=${{ secrets.BUZZ_CLIENTID_DEV }}" | tee -a $GITHUB_ENV
          echo "TF_VAR_client_secret=${{ secrets.BUZZ_CLIENTSECRET_DEV }}" | tee -a $GITHUB_ENV
      - name: Fetch list of endpoints
        id: fetch_endpoints
        run: |
          services=""
          resource_names=$(find ./services -type f -name "main.go" -exec sed -nE 's/\Path: +"([-0-9a-z_/]+)",/\1/p' {} \;)
          for resource_name in $resource_names
          do
              if [[ "$resource_name" == *"states" ]]; then
                  services+="$resource_name?query=TERRAFORM_STATE,"
              elif [[ "$resource_name" == "integration-leafspace/ground-stations/links" ]]; then
                  ground_station_id=$(cat ./testing/leaf_space_integration/link/ground_station/main.tf | sed -nE 's/ +leafspace_ground_station_id += +"([a-z0-9]+)"/\1/p')
                  services+="$resource_name?leafspaceGroundStationIds=$ground_station_id,"
              elif [[ "$resource_name" == "integration-leafspace/satellites/links" ]]; then
                  satellite_id=$(cat ./testing/leaf_space_integration/link/satellite/main.tf | sed -nE 's/ +leafspace_satellite_id += +"([a-z0-9]+)"/\1/p')
                  services+="$resource_name?leafspaceSatelliteIds=$satellite_id,"
              else
                  services+="$resource_name?query=Terraform%,"
              fi
          done

          resource_names=$(find ./services -type f -name "main.go" -exec sed -nEz 's/(.*)Path: +([-a-z_/]+),(.*)*(IsUnique)(.*)path = "([-a-z_/]+)"/\6/p' {} \;)
          for resource_name in $resource_names
          do
              services+="$resource_name,"
          done
          echo "services=${services%?}" >> $GITHUB_OUTPUT
      - name: CleanUp per Services
        uses: actions/github-script@v7
        with:
          script: |
            const clean_up = require('./.github/workflows/clean_up_script.js')
            await clean_up("${{ steps.fetch_endpoints.outputs.services }}",process.env.TF_VAR_tenant, process.env.TF_VAR_client_id, process.env.TF_VAR_client_secret)
      